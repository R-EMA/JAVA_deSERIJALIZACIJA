package serije;

import java.io.*;

/**
 * 
 * @author emma
 * 
 * Serijalizacija i deserijalizacija
 * 
 *
 */

public class MainDS {

	public static void main(String[] args) {
		// (de)serijalizacija objekta
		
		Pratilac p = new Pratilac(1,"jedan");
		
		String filename = "file.ser";
        
        // Serialization
        try
        {  
            //Saving of object in a file
            FileOutputStream file = new FileOutputStream(filename);
            ObjectOutputStream out = new ObjectOutputStream(file);
             
            // Method for serialization of object
            out.writeObject(p);
             
            out.close();
            file.close();
             
            System.out.println("Object has been serialized");
 
        }
         
        catch(IOException ex)
        {
            System.out.println("IOException is caught");
        }
 
 
        Pratilac p1 = null;
 
        // Deserialization
        try
        {  
            // Reading the object from a file
            FileInputStream file = new FileInputStream(filename);
            ObjectInputStream in = new ObjectInputStream(file);
             
            // Method for deserialization of object
            p1 = (Pratilac) in.readObject();
             
            in.close();
            file.close();
             
            System.out.println("Object has been deserialized ");
            System.out.println("a = " + p1.a);
            System.out.println("b = " + p1.b);
        }
         
        catch(IOException ex)
        {
            System.out.println("IOException is caught");
        }
         
        catch(ClassNotFoundException ex)
        {
            System.out.println("ClassNotFoundException is caught");
        }
 

	}

}

/*
 * Serijalizacija je proces upisivanja stanja objekta u tok bajtova. 
 * Uglavnom se koristi za prenošenje stanja objekta u mreži.
 * 
 * Deserijalizacija je proces rekonstrukcije objekta iz serijalizovanog stanja. 
 * To je obrnuta operacija serijalizacije.
 * 
 * Interfejs Serializable je interfejs markera. 
 * Kada se koristi interfejs koji može da se serializuje, klasa se podrazumevano 
 * automatski serijalizuje. 
 * Mogu da se prepišu dva metoda vriteObject() i readObject()
 *  a u cilju kontrolisanja složenijeg procesa serijalizacije objekata. 
 * 
*/
